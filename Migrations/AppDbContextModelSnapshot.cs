// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using TempoLivreAPI.Data;

#nullable disable

namespace TempoLivreAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TempoLivreAPI.Models.Abrigo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CapacidadeMax")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Contato")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("DisponibilidadeAtual")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Endereco")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Abrigos");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NivelAlerta")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.LeituraSensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("SensorId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("UnidadeMedida")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double>("ValorLido")
                        .HasColumnType("BINARY_DOUBLE");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Leituras");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.LocalizacaoUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataHoraRegistro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.OcorrenciaColaborativa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("Longitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Status")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TipoOcorrencia")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ocorrencias");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.RotasSeguras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AbrigoDestinoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<double?>("DestinoLatitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("DestinoLongitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("OrigemLatitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("OrigemLongitude")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("TipoRota")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("AbrigoDestinoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RotasSeguras");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataInstalacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<double?>("LocalizacaoLat")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<double?>("LocalizacaoLong")
                        .HasColumnType("BINARY_DOUBLE");

                    b.Property<string>("Status")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("TipoSensor")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.Alerta", b =>
                {
                    b.HasOne("TempoLivreAPI.Models.Usuario", "Usuario")
                        .WithMany("Alertas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.LeituraSensor", b =>
                {
                    b.HasOne("TempoLivreAPI.Models.Sensor", "Sensor")
                        .WithMany("Leituras")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.LocalizacaoUsuario", b =>
                {
                    b.HasOne("TempoLivreAPI.Models.Usuario", "Usuario")
                        .WithMany("Localizacoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.OcorrenciaColaborativa", b =>
                {
                    b.HasOne("TempoLivreAPI.Models.Usuario", "Usuario")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.RotasSeguras", b =>
                {
                    b.HasOne("TempoLivreAPI.Models.Abrigo", "AbrigoDestino")
                        .WithMany()
                        .HasForeignKey("AbrigoDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TempoLivreAPI.Models.Usuario", "Usuario")
                        .WithMany("RotasSeguras")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AbrigoDestino");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.Sensor", b =>
                {
                    b.Navigation("Leituras");
                });

            modelBuilder.Entity("TempoLivreAPI.Models.Usuario", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("Localizacoes");

                    b.Navigation("Ocorrencias");

                    b.Navigation("RotasSeguras");
                });
#pragma warning restore 612, 618
        }
    }
}
